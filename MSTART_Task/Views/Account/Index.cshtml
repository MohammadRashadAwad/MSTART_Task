@model IEnumerable<MSTART_Task.Models.Account>

@{
    ViewData["Title"] = "All Accounts";
    var currentPage = ViewBag.CurrentPage;
    var pageSize = ViewBag.PageSize;
    var totalCount = ViewBag.TotalCount;
    var totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    var placeholder = "You can search by ID, Account ID or Account Number";
}
<h2>All Accounts</h2>
<partial name="_FormSearch" model="placeholder" />
<partial name="_AddNewAccount" model="new AccountViewModel()" />

@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    ID
                </th>
                <th>
                    User ID
                </th>
                <th>
                    Username
                </th>

                <th>
                    Account Number
                </th>
                <th>
                    Balance
                </th>
                <th>
                    Currency
                </th>
                <th>
                    Status
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <form asp-action="DeleteUsers">
                <button class="btn btn-danger mt-3" type="submit">Delete Selected Accounts</button>
                @foreach (var account in Model)
                {
                <tr>
                    <td>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="inlineCheckbox1"
                                   name="accountIds" value="@account.ID"
                                @(account.Status == 0 ? "disabled " : "") />
                            <label class="form-check-label" for="inlineCheckbox1">@account.ID</label>
                        </div>

                    </td>

                    <td>
                            @account.User_ID
                    </td>

                    <td>
                            @account.User.Username
                    </td>

                    <td>
                            @account.Account_Number
                    </td>
                    <td>
                            @account.Balance
                    </td>
                    <td>
                            @account.Currency
                    </td>
                    <td>
                            @(Enum.GetNames(typeof(Status)).GetValue(account.Status))
                    </td>
                    <td>
                        <a class="btn btn-outline-secondary" asp-action="Details" asp-route-id="@account.ID">Details</a> |
                        <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@account.ID">Edit</a>

                    </td>
                </tr>
                }
            </form>
        </tbody>

    </table>

    <nav aria-label="...">
        <ul class="pagination">

            @for (var i = 1; i <= totalPages; i++)
            {

                <li class="page-item  @(i == currentPage ? "active" : "") " aria-current="page">
                    <a class=" page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@pageSize">@i</a>
                </li>
            }

        </ul>
    </nav>
}
else
{
    <div class="alert alert-warning mt-3">
        <p>No Data <a asp-action="Index">Click to view All User</a></p>
    </div>
}



@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }



}
