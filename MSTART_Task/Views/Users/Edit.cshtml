@using MSTART_Task.Enums;
@model MSTART_Task.ViewModels.UserViewModel


<h2> Update User Information</h2>

<form asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="form-group col-6">
            <label asp-for="Username"></label>
            <input asp-for="Username" class="form-control"  />
            <span asp-validation-for="Username" class="text-danger"></span>
        </div>
        <div class="form-group col-6">
            <label asp-for="Email"></label>
            <input asp-for="Email"  class="form-control"  />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-6">
            <label asp-for="First_Name"></label>
            <input asp-for="First_Name" class="form-control"  />
            <span asp-validation-for="First_Name" class="text-danger"></span>
        </div>
        <div class="form-group col-6">
            <label asp-for="Last_Name"></label>
            <input asp-for ="Last_Name" class="form-control"/>
            <span asp-validation-for="Last_Name" class="text-danger"></span>
        </div>
    </div>

    <div class="row">

        <div class="form-group col-6">
            <label as-for="Status"></label>
            <select class="form-control" asp-for="Status" asp-items="Html.GetEnumSelectList(typeof(Status))">
              @*  @foreach (var status in Enum.GetValues(typeof(Status)))
                {
                    <!option value="@status" @(Model.Status == (Status)status ? "selected" : "")>@status</!option>
                }*@
            </select>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
        <div class="form-group col-6">
            <label asp-for="Gender"></label>
            <select asp-for="Gender" class="form-control" asp-items="Html.GetEnumSelectList(typeof(Gender))">
               @* @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <!option value="@gender" @(Model.Gender == (Gender)gender ? "selected" : "") >@gender</!option>

                }*@
            </select>
            <span asp-validation-for="Gender" class="text-danger"></span>
        </div>

    </div>


    <div class="row">

        <div class="form-group col-6">
            <label asp-for="DateTime_UTC"></label>
            <input asp-for="DateTime_UTC" class="form-control"  />
            <span asp-validation-for="DateTime_UTC" class="text-danger"></span>
        </div>

        <div class="form-group col-6">
            <label asp-for="Update_DateTime_UTC"></label>
            <input asp-for="Update_DateTime_UTC" class="form-control" />
            <span asp-validation-for="Update_DateTime_UTC" class="text-danger"></span>
        </div>

    </div>

    <div class="form-group">
        <label asp-for="Server_DateTime"></label>
        <input asp-for="Server_DateTime" class="form-control" />
        <span asp-validation-for="Server_DateTime" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Date_Of_Birth"></label>
        <input asp-for="Date_Of_Birth" class="form-control" />
        <span asp-validation-for="Date_Of_Birth" class="text-danger"></span>
    </div>



    <div class="form-group mt-3">
        <input type="submit" value="Save" class="btn btn-primary" />
        <input type="submit" value="Save & Continue" asp-route-continueEditing=true class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>
@section Scripts {
    
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
